{"version":3,"sources":["components/Notification.ts","table/ReportTable.tsx","components/DangerButton.tsx","components/PrimaryButton.tsx","modals/AddProxy.tsx","table/ProxyTable.tsx","modals/AddDomain.tsx","table/DomainTable.tsx","table/GitTable.tsx","modals/AddConfig.tsx","table/ConfigTable.tsx","table/Log.tsx","pages/AppPage.tsx","modals/AddApp.tsx","modals/ServiceInfo.tsx","modals/AddService.tsx","modals/LinkList.tsx","table/DatabasesTalbe.tsx","pages/GlobalPage.tsx","AppContext.tsx","pages/MainPage.tsx","pages/LaunchPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["notificationDisabled","Notification","type","msg","antd","success","message","description","duration","error","setTimeout","ReportTable","appName","appCtx","React","useContext","AppContext","useState","lock","setLock","appDir","setAppDir","DeploySource","setDeploySource","initialize","a","fetch","data","reports","report","Key","Value","useEffect","bordered","column","sm","xs","Item","label","checked","Paragraph","copyable","globalDomain","DangerButton","title","onClick","disabled","danger","confirm","icon","content","okText","cancelText","onOk","PrimaryButton","htmlType","AddProxy","onSuccess","onFinish","values","setModal","scheme","hostPort","containerPort","className","name","rules","required","prefix","placeholder","ProxyTable","dataSource","setDataSource","enable","setEnable","proxyType","setProxyType","portmap","v","split","item","maps","length","push","columns","align","dataIndex","render","enableProxy","check","xxl","xl","lg","md","onChange","pagination","AddDomain","domain","DomainTable","hosts","vhosts","host","GitTable","temp","map","key","value","AddConfig","restart","config","ConfigTable","setRestart","width","style","wordWrap","Log","num","setNum","min","defaultValue","number","Title","AppPage","defaultActiveKey","TabPane","tab","AddApp","getApps","ServiceInfo","databaseName","serviceName","status","setStatus","spinning","setSpinning","info","i","database","service","start","AddService","password","rootPassword","Password","LinkList","setAppName","links","link","appNames","Option","DatabasesTalbe","databases","enableDatabase","tip","Service","services","Databases","setDB","allDatabases","d","dd","installed","enabled","GlobalPage","operations","tabBarExtraContent","setGlobalDomain","createContext","undefined","globalMenu","component","AppProvider","children","loginPage","homePage","modal","modalWidth","setModalWidth","account","setAccount","menus","setMenus","setAppNames","sshKeyUploaded","setSshKeyUploaded","redirect","axios","defaults","baseURL","headers","common","method","url","param","response","console","log","errorCode","window","location","href","Error","errorMessage","login","logout","apps","list","Provider","visible","onCancel","footer","closable","MainPage","history","useHistory","Sider","collapsible","trigger","overflow","theme","mode","selectedKeys","hash","slice","defaultOpenKeys","menu","Header","zIndex","placement","Content","LaunchPage","init","LoginPage","LoginForm","shape","fontSize","NotFoundPage","UploadPage","props","action","file","fileList","UploadOutlined","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e4ba4135.chunk.js","sourcesContent":["import * as antd from 'antd';\n\nlet notificationDisabled: boolean = false;\n\nconst Notification = {\n  add: (type: 'success' | 'error', msg: string): void => {\n    if (notificationDisabled) {\n      return;\n    }\n\n    notificationDisabled = true;\n\n    if (type === 'success') {\n      antd.notification.success({\n        message: '成功',\n        description: msg,\n        duration: 1.5,\n      });\n    } else if (type === 'error') {\n      antd.notification.error({\n        message: '錯誤',\n        description: msg,\n        duration: 1.5,\n      });\n    }\n\n    setTimeout(() => {\n      notificationDisabled = false;\n    }, 2000);\n  },\n};\n\nexport { Notification };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\nimport * as cookie from 'js-cookie';\nimport {\n  HighlightOutlined,\n  SmileOutlined,\n  SmileFilled,\n} from '@ant-design/icons';\n\nimport { AppContext } from '../AppContext';\n\ninterface AppPageProp {\n  appName: string;\n}\n\nconst ReportTable = ({ appName }: AppPageProp) => {\n  const appCtx = React.useContext(AppContext);\n  const [lock, setLock] = React.useState<boolean>(false);\n  const [appDir, setAppDir] = React.useState<string>('');\n  const [DeploySource, setDeploySource] = React.useState<string>('');\n\n  const initialize = async () => {\n    const data = await appCtx.fetch('get', `/api/app/${appName}`);\n    if (data) {\n      const reports = data.report;\n\n      for (const report of reports) {\n        if (report.Key === 'App locked') {\n          setLock(report.Value === 'true');\n        } else if (report.Key === 'App dir') {\n          setAppDir(report.Value);\n        } else if (report.Key === 'App deploy source') {\n          setDeploySource(report.Value);\n        }\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  return (\n    <>\n      <antd.Descriptions bordered column={{ sm: 2, xs: 1 }}>\n        <antd.Descriptions.Item label=\"Lock\">\n          <antd.Switch checked={lock} />\n        </antd.Descriptions.Item>\n        <antd.Descriptions.Item label=\"App dir\">\n          {appDir}\n        </antd.Descriptions.Item>\n        <antd.Descriptions.Item label=\"App deploy source\">\n          {DeploySource}\n        </antd.Descriptions.Item>\n        <antd.Descriptions.Item label=\"Git remote Add\">\n          <antd.Typography.Paragraph copyable>\n            {`git remote add ${appName} dokku@${appCtx.globalDomain}:${appName}`}\n          </antd.Typography.Paragraph>\n        </antd.Descriptions.Item>\n      </antd.Descriptions>\n    </>\n  );\n};\n\nexport { ReportTable };\n","import React from 'react';\nimport * as antd from 'antd';\n\ninterface DangerButtonProps {\n  title: string;\n  message: string;\n  onClick?: () => void;\n  disabled?: boolean;\n}\n\nconst DangerButton = ({\n  title,\n  message,\n  onClick,\n  disabled,\n}: DangerButtonProps) => {\n  const showDialog = () => {\n    antd.Modal.confirm({\n      title: 'Confirm',\n      icon: <i />,\n      content: message,\n      okText: 'Confirm?',\n      cancelText: 'Cancel',\n      onOk: onClick,\n    });\n  };\n\n  return (\n    <antd.Button type=\"primary\" danger disabled={disabled} onClick={showDialog}>\n      {title}\n    </antd.Button>\n  );\n};\n\nexport { DangerButton };\n","import React from 'react';\nimport * as antd from 'antd';\n\ninterface PrimaryButtonProps {\n  title: string;\n  onClick?: () => void;\n  disabled?: boolean;\n  htmlType?: 'button' | 'submit' | 'reset';\n}\n\nconst PrimaryButton = ({\n  title,\n  onClick,\n  disabled,\n  htmlType = 'button',\n}: PrimaryButtonProps) => {\n  return (\n    <antd.Button\n      type=\"primary\"\n      disabled={disabled}\n      onClick={onClick}\n      htmlType={htmlType}\n    >\n      {title}\n    </antd.Button>\n  );\n};\n\nexport { PrimaryButton };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\n\nimport { PrimaryButton } from '../components/PrimaryButton';\nimport { AppContext } from '../AppContext';\nimport { Notification } from '../components/Notification';\n\nconst AddProxy = ({\n  onSuccess,\n  appName,\n}: {\n  onSuccess: Function;\n  appName: string;\n}) => {\n  const appCtx = React.useContext(AppContext);\n\n  React.useEffect(() => {}, []);\n\n  const onFinish = async (values: any) => {\n    appCtx.setModal(null);\n\n    const data = await appCtx.fetch('post', `/api/proxy/${appName}`, {\n      scheme: values.scheme,\n      hostPort: values.hostPort,\n      containerPort: values.containerPort,\n    });\n\n    if (data) {\n      Notification.add('success', 'Success Add');\n      onSuccess();\n    }\n  };\n\n  return (\n    <antd.Form onFinish={onFinish}>\n      <h5 className=\"font-weight-bold mb-4\">Add Proxy</h5>\n\n      <antd.Form.Item\n        name=\"scheme\"\n        rules={[{ required: true, message: 'Input scheme' }]}\n      >\n        <antd.Input\n          prefix={<i className=\"fa fa-shield\" />}\n          placeholder=\"Please input scheme\"\n        />\n      </antd.Form.Item>\n\n      <antd.Form.Item\n        name=\"hostPort\"\n        rules={[{ required: true, message: 'Input host port' }]}\n      >\n        <antd.Input\n          prefix={<i className=\"fa fa-hand-o-down\" />}\n          placeholder=\"Please input host port\"\n        />\n      </antd.Form.Item>\n\n      <antd.Form.Item\n        name=\"containerPort\"\n        rules={[{ required: true, message: 'Input container port' }]}\n      >\n        <antd.Input\n          prefix={<i className=\"fa fa-hand-o-up\" />}\n          placeholder=\"Please input container port\"\n        />\n      </antd.Form.Item>\n\n      <antd.Form.Item className=\"text-center\">\n        <PrimaryButton title=\"Add\" htmlType=\"submit\" />\n      </antd.Form.Item>\n    </antd.Form>\n  );\n};\n\nexport { AddProxy };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\nimport * as cookie from 'js-cookie';\n\nimport { DangerButton } from '../components/DangerButton';\nimport { AppContext } from '../AppContext';\nimport { AddProxy } from '../modals/AddProxy';\nimport { Notification } from '../components/Notification';\n\ninterface AppPageProp {\n  appName: string;\n}\n\nconst ProxyTable = ({ appName }: AppPageProp) => {\n  const appCtx = React.useContext(AppContext);\n  const [dataSource, setDataSource] = React.useState<PortMap[]>([]); //coulmns data\n  const [enable, setEnable] = React.useState<boolean>(false);\n  const [proxyType, setProxyType] = React.useState<string>('');\n\n  const initialize = async () => {\n    const data = await appCtx.fetch('get', `/api/proxy/${appName}`);\n    const reports = data.report;\n\n    const portmap: PortMap[] = [];\n    for (const report of reports) {\n      if (report.Key === 'Proxy enabled') {\n        setEnable(report.Value === 'true');\n      } else if (report.Key === 'Proxy type') {\n        setProxyType(report.Value);\n      } else if (report.Key === 'Proxy port map') {\n        let v = report.Value.split(' ');\n        for (const item of v) {\n          let maps = item.split(':');\n          if (maps.length === 3) {\n            portmap.push({\n              scheme: maps[0],\n              hostPort: maps[1],\n              containerPort: maps[2],\n            });\n          }\n        }\n      }\n    }\n    setDataSource(portmap);\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  interface PortMap {\n    scheme: string;\n    hostPort: string;\n    containerPort: string;\n  }\n\n  const columns: ColumnsType<PortMap> = [\n    {\n      title: 'Scheme',\n      align: 'center',\n      dataIndex: 'scheme',\n    },\n    {\n      title: 'HostPort',\n      align: 'center',\n      dataIndex: 'hostPort',\n    },\n    {\n      title: 'ContainerPort',\n      align: 'center',\n      dataIndex: 'containerPort',\n    },\n    {\n      title: 'Delete',\n      align: 'center',\n      render: (item) => (\n        <DangerButton\n          title=\"Delete Proxy\"\n          message=\"Confirm delete proxy?\"\n          onClick={async () => {\n            let data = await appCtx.fetch('delete', `/api/proxy/${appName}`, {\n              scheme: item.scheme,\n              hostPort: item.hostPort,\n              containerPort: item.containerPort,\n            });\n            if (data) initialize();\n          }}\n        />\n      ),\n    },\n  ];\n\n  const enableProxy = async () => {\n    const check = enable ? 'disable' : 'enable';\n    antd.Modal.confirm({\n      title: `Confirm to ${check} proxy?`,\n      icon: <i />,\n      content: check,\n      okText: 'Confirm',\n      cancelText: 'Cancel',\n      onOk: async () => {\n        const data = await appCtx.fetch(\n          'patch',\n          `/api/proxy/${appName}/${check}`,\n        );\n        if (data) {\n          Notification.add('success', `Success ${check} proxy`);\n          initialize();\n        }\n      },\n    });\n  };\n\n  return (\n    <>\n      <div className=\"mb-2 d-flex flex-row-reverse\">\n        <antd.Button\n          type=\"primary\"\n          onClick={() => {\n            appCtx.setModal(\n              <AddProxy onSuccess={initialize} appName={appName} />,\n            );\n          }}\n        >\n          Add Proxy\n        </antd.Button>\n      </div>\n      <antd.Descriptions\n        bordered\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n      >\n        <antd.Descriptions.Item label=\"Enable\">\n          <antd.Switch checked={enable} onChange={enableProxy} />\n        </antd.Descriptions.Item>\n        <antd.Descriptions.Item label=\"Proxy Type\">\n          {proxyType}\n        </antd.Descriptions.Item>\n      </antd.Descriptions>\n      <div className=\"m-2\" />\n      <antd.Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n      />\n    </>\n  );\n};\n\nexport { ProxyTable };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\n\nimport { PrimaryButton } from '../components/PrimaryButton';\nimport { AppContext } from '../AppContext';\nimport { Notification } from '../components/Notification';\n\nconst AddDomain = ({\n  onSuccess,\n  appName,\n}: {\n  onSuccess: Function;\n  appName: string;\n}) => {\n  const appCtx = React.useContext(AppContext);\n\n  React.useEffect(() => {}, []);\n\n  const onFinish = async (values: any) => {\n    appCtx.setModal(null);\n\n    const data = await appCtx.fetch('post', `/api/domain/${appName}`, [\n      values.domain,\n    ]);\n\n    if (data) {\n      Notification.add('success', 'Success Add');\n      onSuccess();\n    }\n  };\n\n  return (\n    <antd.Form onFinish={onFinish}>\n      <h5 className=\"font-weight-bold mb-4\">Add Domain</h5>\n\n      <antd.Form.Item\n        name=\"domain\"\n        rules={[{ required: true, message: 'Input domain' }]}\n      >\n        <antd.Input\n          prefix={<i className=\"fa fa-user\" />}\n          placeholder=\"Please input domain\"\n        />\n      </antd.Form.Item>\n\n      <antd.Form.Item className=\"text-center\">\n        <PrimaryButton title=\"Add\" htmlType=\"submit\" />\n      </antd.Form.Item>\n    </antd.Form>\n  );\n};\n\nexport { AddDomain };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\nimport * as cookie from 'js-cookie';\n\nimport { DangerButton } from '../components/DangerButton';\nimport { AppContext } from '../AppContext';\nimport { AddDomain } from '../modals/AddDomain';\n\ninterface AppPageProp {\n  appName: string;\n}\n\nconst DomainTable = ({ appName }: AppPageProp) => {\n  const appCtx = React.useContext(AppContext);\n  const [dataSource, setDataSource] = React.useState<Host[]>([]); //coulmns data\n  const [enable, setEnable] = React.useState<boolean>(false);\n\n  const initialize = async () => {\n    const data = await appCtx.fetch('get', `/api/domain/${appName}`);\n    const reports = data.report;\n\n    let hosts: Host[] = [];\n    for (const report of reports) {\n      if (report.Key === 'Domains app enabled') {\n        setEnable(report.Value === 'true');\n      } else if (report.Key === 'Domains app vhosts') {\n        const vhosts = report.Value.split(' ');\n        for (const host of vhosts) {\n          if (host !== '') {\n            hosts.push({ host });\n          }\n        }\n      }\n    }\n    setDataSource(hosts);\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  interface Host {\n    host: string;\n  }\n\n  const columns: ColumnsType<Host> = [\n    {\n      title: 'Host',\n      align: 'center',\n      dataIndex: 'host',\n    },\n    {\n      title: 'Delete',\n      align: 'center',\n      render: (item) => (\n        <DangerButton\n          title=\"Delete Domain\"\n          message=\"Confirm delete domain?\"\n          onClick={async () => {\n            let data = await appCtx.fetch('delete', `/api/domain/${appName}`, [\n              item.host,\n            ]);\n            if (data) initialize();\n          }}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"mb-2 d-flex flex-row-reverse\">\n        <antd.Button\n          type=\"primary\"\n          onClick={() => {\n            appCtx.setModal(\n              <AddDomain onSuccess={initialize} appName={appName} />,\n            );\n          }}\n        >\n          Add Domain\n        </antd.Button>\n      </div>\n      <antd.Descriptions\n        bordered\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n      >\n        <antd.Descriptions.Item label=\"Enable\">\n          <antd.Switch checked={enable} />\n        </antd.Descriptions.Item>\n      </antd.Descriptions>\n      <div className=\"m-2\" />\n      <antd.Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n      />\n    </>\n  );\n};\n\nexport { DomainTable };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\nimport * as cookie from 'js-cookie';\n\nimport { AppContext } from '../AppContext';\n\ninterface AppPageProp {\n  appName: string;\n}\n\nconst GitTable = ({ appName }: AppPageProp) => {\n  const appCtx = React.useContext(AppContext);\n  const [dataSource, setDataSource] = React.useState<PropsValue[]>([]); //coulmns data\n\n  const initialize = async () => {\n    const data = await appCtx.fetch('get', `/api/git/${appName}`);\n    const reports = data.report;\n\n    const temp = reports.map((report: any) => {\n      return {\n        key: report.Key,\n        value: report.Value,\n      };\n    });\n    setDataSource(temp);\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  interface PropsValue {\n    key: string;\n    value: string;\n  }\n\n  const columns: ColumnsType<PropsValue> = [\n    {\n      title: 'Key',\n      align: 'center',\n      dataIndex: 'key',\n    },\n    {\n      title: 'Value',\n      align: 'center',\n      dataIndex: 'value',\n    },\n  ];\n\n  return (\n    <>\n      <antd.Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n      />\n    </>\n  );\n};\n\nexport { GitTable };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\n\nimport { PrimaryButton } from '../components/PrimaryButton';\nimport { AppContext } from '../AppContext';\nimport { Notification } from '../components/Notification';\n\nconst AddConfig = ({\n  onSuccess,\n  appName,\n  restart,\n}: {\n  onSuccess: Function;\n  appName: string;\n  restart: boolean;\n}) => {\n  const appCtx = React.useContext(AppContext);\n\n  React.useEffect(() => {}, []);\n\n  const onFinish = async (values: any) => {\n    appCtx.setModal(null);\n\n    const data = await appCtx.fetch('post', `/api/config/${appName}`, {\n      restart: restart,\n      config: [{ key: values.key, value: values.value }],\n    });\n\n    if (data) {\n      Notification.add('success', 'Success Add');\n      onSuccess();\n    }\n  };\n\n  return (\n    <antd.Form onFinish={onFinish}>\n      <h5 className=\"font-weight-bold mb-4\">Add Config</h5>\n\n      <antd.Form.Item\n        label=\"Key\"\n        name=\"key\"\n        rules={[{ required: true, message: 'Input key' }]}\n      >\n        <antd.Input\n          prefix={<i className=\"fa fa-key\" />}\n          placeholder=\"Please input key\"\n        />\n      </antd.Form.Item>\n\n      <antd.Form.Item\n        label=\"Value\"\n        name=\"value\"\n        rules={[{ required: true, message: 'Input value' }]}\n      >\n        <antd.Input\n          prefix={<i className=\"fa fa-folder-open\" />}\n          placeholder=\"Please input value\"\n        />\n      </antd.Form.Item>\n\n      <antd.Form.Item className=\"text-center\">\n        <></>\n        <PrimaryButton title=\"Add\" htmlType=\"submit\" />\n      </antd.Form.Item>\n    </antd.Form>\n  );\n};\n\nexport { AddConfig };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\nimport * as cookie from 'js-cookie';\n\nimport { DangerButton } from '../components/DangerButton';\nimport { AppContext } from '../AppContext';\nimport { AddConfig } from '../modals/AddConfig';\n\ninterface AppPageProp {\n  appName: string;\n}\n\nconst ConfigTable = ({ appName }: AppPageProp) => {\n  const appCtx = React.useContext(AppContext);\n  const [dataSource, setDataSource] = React.useState<PropsValue[]>([]); //coulmns data\n  const [restart, setRestart] = React.useState<boolean>(true);\n\n  const initialize = async () => {\n    const data = await appCtx.fetch('get', `/api/config/${appName}`);\n    if (data) {\n      const reports = data.report;\n\n      const temp = reports.map((report: any) => {\n        return {\n          key: report.Key,\n          value: report.Value,\n        };\n      });\n      setDataSource(temp);\n    }\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  interface PropsValue {\n    key: string;\n    value: string;\n  }\n\n  const columns: ColumnsType<PropsValue> = [\n    {\n      title: 'Key',\n      align: 'center',\n      dataIndex: 'key',\n    },\n    {\n      title: 'Value',\n      align: 'center',\n      dataIndex: 'value',\n      width: 600,\n      render: (item) => (\n        <div style={{ wordWrap: 'break-word', width: 600 }}>{item}</div>\n      ),\n    },\n    {\n      title: 'Delete',\n      align: 'center',\n      render: (item) => (\n        <DangerButton\n          title=\"Delete\"\n          message=\"Confirm delete config key?\"\n          onClick={async () => {\n            let data = await appCtx.fetch(\n              'delete',\n              `/api/config/${appName}/${item.key}?restart=${restart}`,\n            );\n            if (data) initialize();\n          }}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"mb-2 d-flex \">\n        <div className=\"mx-1\">Restart After Change</div>\n        <antd.Switch checked={restart} onChange={setRestart} />\n        <div className=\"flex-fill\"></div>\n        <antd.Button\n          type=\"primary\"\n          onClick={() => {\n            appCtx.setModal(\n              <AddConfig\n                onSuccess={initialize}\n                appName={appName}\n                restart={restart}\n              />,\n            );\n          }}\n        >\n          Add Config\n        </antd.Button>\n      </div>\n      <antd.Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n      />\n    </>\n  );\n};\n\nexport { ConfigTable };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\nimport * as cookie from 'js-cookie';\n\nimport Ansi from 'ansi-to-react';\nimport { DangerButton } from '../components/DangerButton';\nimport { AppContext } from '../AppContext';\nimport { AddProxy } from '../modals/AddProxy';\nimport { Notification } from '../components/Notification';\nimport { PrimaryButton } from '../components/PrimaryButton';\n\ninterface AppPageProp {\n  appName: string;\n}\n\nconst Log = ({ appName }: AppPageProp) => {\n  const appCtx = React.useContext(AppContext);\n  const [dataSource, setDataSource] = React.useState<string[]>([]); //coulmns data\n  const [num, setNum] = React.useState<number>(10);\n\n  const initialize = async () => {\n    const data = await appCtx.fetch('get', `/api/logs/${appName}/${num}`);\n\n    if (data) setDataSource(data.report.split('\\n'));\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  return (\n    <>\n      <div>\n        <antd.InputNumber\n          min={1}\n          defaultValue={num}\n          onChange={(number) => {\n            // @ts-ignore\n            setNum(number);\n          }}\n        />\n        <PrimaryButton title={`Show ${num} of logs`} onClick={initialize} />\n      </div>\n      <antd.Typography>\n        <antd.Typography.Title>{`${appName} LOG`}</antd.Typography.Title>\n        {dataSource.map((item) => (\n          <antd.Typography.Paragraph>\n            <Ansi>{item}</Ansi>\n          </antd.Typography.Paragraph>\n        ))}\n      </antd.Typography>\n    </>\n  );\n};\n\nexport { Log };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\nimport * as cookie from 'js-cookie';\n\nimport { AppContext } from '../AppContext';\nimport { ReportTable } from '../table/ReportTable';\nimport { ProxyTable } from '../table/ProxyTable';\nimport { DomainTable } from '../table/DomainTable';\nimport { GitTable } from '../table/GitTable';\nimport { ConfigTable } from '../table/ConfigTable';\nimport { Log } from '../table/Log';\n\ninterface AppPageProp {\n  appName: string;\n}\n\nconst AppPage = ({ appName }: AppPageProp) => {\n  const appCtx = React.useContext(AppContext);\n\n  const initialize = async () => {};\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  const tabChange = (key: string) => {};\n\n  return (\n    <>\n      <antd.Tabs defaultActiveKey=\"1\" onChange={tabChange}>\n        <antd.Tabs.TabPane tab=\"Report\" key=\"report\">\n          <ReportTable appName={appName} />\n        </antd.Tabs.TabPane>\n\n        <antd.Tabs.TabPane tab=\"Proxy\" key=\"proxy\">\n          <ProxyTable appName={appName} />\n        </antd.Tabs.TabPane>\n\n        <antd.Tabs.TabPane tab=\"Domain\" key=\"domain\">\n          <DomainTable appName={appName} />\n        </antd.Tabs.TabPane>\n\n        <antd.Tabs.TabPane tab=\"Git\" key=\"git\">\n          <GitTable appName={appName} />\n        </antd.Tabs.TabPane>\n\n        <antd.Tabs.TabPane tab=\"Config\" key=\"config\">\n          <ConfigTable appName={appName} />\n        </antd.Tabs.TabPane>\n\n        <antd.Tabs.TabPane tab=\"Log\" key=\"log\">\n          <Log appName={appName} />\n        </antd.Tabs.TabPane>\n      </antd.Tabs>\n    </>\n  );\n};\n\nexport { AppPage };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\n\nimport { PrimaryButton } from '../components/PrimaryButton';\nimport { AppContext } from '../AppContext';\nimport { Notification } from '../components/Notification';\n\nconst AddApp = () => {\n  const appCtx = React.useContext(AppContext);\n\n  React.useEffect(() => {}, []);\n\n  const onFinish = async (values: any) => {\n    appCtx.setModal(null);\n\n    const data = await appCtx.fetch('post', `/api/app/${values.appName}`, [\n      values.domain,\n    ]);\n\n    if (data) {\n      Notification.add('success', 'Success Add');\n      await appCtx.getApps();\n    }\n  };\n\n  return (\n    <antd.Form onFinish={onFinish}>\n      <h5 className=\"font-weight-bold mb-4\">Add Domain</h5>\n\n      <antd.Form.Item\n        name=\"appName\"\n        rules={[{ required: true, message: 'Input AppName' }]}\n      >\n        <antd.Input\n          prefix={<i className=\"fa fa-desktop\" />}\n          placeholder=\"Please input AppName\"\n        />\n      </antd.Form.Item>\n\n      <antd.Form.Item className=\"text-center\">\n        <PrimaryButton title=\"Add\" htmlType=\"submit\" />\n      </antd.Form.Item>\n    </antd.Form>\n  );\n};\n\nexport { AddApp };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\n\nimport { PrimaryButton } from '../components/PrimaryButton';\nimport { AppContext } from '../AppContext';\nimport { Notification } from '../components/Notification';\n\nexport const ServiceInfo = ({\n  databaseName,\n  serviceName,\n}: {\n  databaseName: string;\n  serviceName: string;\n}) => {\n  const appCtx = React.useContext(AppContext);\n  const [dataSource, setDataSource] = React.useState<info[]>([]);\n  const [status, setStatus] = React.useState<boolean>(false);\n  const [spinning, setSpinning] = React.useState<boolean>(false);\n\n  interface info {\n    key: string;\n    value: string;\n  }\n  const initialize = async () => {\n    const data = await appCtx.fetch(\n      'get',\n      `/api/dbservice/${databaseName}/${serviceName}`,\n    );\n    if (data) {\n      for (const i of data.info) {\n        if (i.Key === 'Status') {\n          setStatus(i.Value === 'running');\n        }\n      }\n      setDataSource(data.info);\n    }\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  const columns: ColumnsType<info> = [\n    {\n      title: 'Key',\n      align: 'center',\n      dataIndex: 'Key',\n    },\n    {\n      title: 'Value',\n      align: 'center',\n      dataIndex: 'Value',\n    },\n  ];\n\n  return (\n    <>\n      <antd.Spin spinning={spinning}>\n        <div className=\"mb-2 d-flex \">\n          <antd.Button\n            type=\"primary\"\n            onClick={async () => {\n              setSpinning(true);\n              const data = await appCtx.fetch('patch', '/api/dbservice', {\n                database: databaseName,\n                service: serviceName,\n                start: status ? 'stop' : 'start',\n              });\n              if (data) initialize();\n              setSpinning(false);\n            }}\n          >\n            {status ? 'stop' : 'start'}\n          </antd.Button>\n          {status && (\n            <antd.Button\n              type=\"primary\"\n              onClick={async () => {\n                setSpinning(true);\n                const data = await appCtx.fetch('patch', '/api/dbservice', {\n                  database: databaseName,\n                  service: serviceName,\n                  start: 'restart',\n                });\n                if (data) initialize();\n                setSpinning(false);\n              }}\n            >\n              restart\n            </antd.Button>\n          )}\n        </div>\n        <antd.Table\n          dataSource={dataSource}\n          columns={columns}\n          pagination={false}\n        />\n      </antd.Spin>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\n\nimport { PrimaryButton } from '../components/PrimaryButton';\nimport { AppContext } from '../AppContext';\nimport { Notification } from '../components/Notification';\n\nexport const AddService = ({\n  onSuccess,\n  databaseName,\n}: {\n  onSuccess: Function;\n  databaseName: string;\n}) => {\n  const appCtx = React.useContext(AppContext);\n\n  React.useEffect(() => {}, []);\n\n  const onFinish = async (values: any) => {\n    appCtx.setModal(null);\n\n    const data = await appCtx.fetch('post', `/api/dbservice/${databaseName}`, {\n      service: values.service,\n      password: values.password,\n      rootPassword: values.rootPassword,\n    });\n\n    if (data) {\n      Notification.add('success', 'Success Add');\n      await appCtx.getApps();\n      onSuccess();\n    }\n  };\n\n  return (\n    <antd.Form onFinish={onFinish}>\n      <h5 className=\"font-weight-bold mb-4\">Add Service</h5>\n\n      <antd.Form.Item\n        name=\"service\"\n        rules={[{ required: true, message: 'Input service name' }]}\n      >\n        <antd.Input\n          prefix={<i className=\"fa fa-desktop\" />}\n          placeholder=\"Please input service name\"\n        />\n      </antd.Form.Item>\n\n      <antd.Form.Item\n        name=\"password\"\n        rules={[{ required: true, message: 'Input Password' }]}\n      >\n        <antd.Input.Password\n          prefix={<i className=\"fa fa-desktop\" />}\n          placeholder=\"Please input Password\"\n        />\n      </antd.Form.Item>\n\n      <antd.Form.Item\n        name=\"rootPassword\"\n        rules={[{ required: true, message: 'Input Root Password' }]}\n      >\n        <antd.Input.Password\n          prefix={<i className=\"fa fa-desktop\" />}\n          placeholder=\"Please input Root Password\"\n        />\n      </antd.Form.Item>\n\n      <antd.Form.Item className=\"text-center\">\n        <PrimaryButton title=\"Add\" htmlType=\"submit\" />\n      </antd.Form.Item>\n    </antd.Form>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\n\nimport { PrimaryButton } from '../components/PrimaryButton';\nimport { DangerButton } from '../components/DangerButton';\nimport { AppContext } from '../AppContext';\nimport { Notification } from '../components/Notification';\n\nexport const LinkList = ({\n  databaseName,\n  serviceName,\n}: {\n  databaseName: string;\n  serviceName: string;\n}) => {\n  const appCtx = React.useContext(AppContext);\n  const [dataSource, setDataSource] = React.useState<link[]>([]);\n  const [appName, setAppName] = React.useState<string>('');\n  const [spinning, setSpinning] = React.useState<boolean>(false);\n\n  interface link {\n    appName: string;\n  }\n  const initialize = async () => {\n    const data = await appCtx.fetch(\n      'get',\n      `/api/dblinks/${databaseName}/${serviceName}`,\n    );\n    if (data) {\n      setDataSource(\n        data.links.map((item: string) => {\n          return { appName: item };\n        }),\n      );\n    }\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  const columns: ColumnsType<link> = [\n    {\n      title: 'App Name',\n      align: 'center',\n      dataIndex: 'appName',\n    },\n    {\n      title: '',\n      align: 'center',\n      render: (item) => (\n        <DangerButton\n          title=\"Unlink\"\n          message={`Unlink ${item.appName}`}\n          onClick={async () => {\n            setSpinning(true);\n            const data = await appCtx.fetch('post', '/api/dblink', {\n              database: databaseName,\n              service: serviceName,\n              appName: item.appName,\n              link: false,\n            });\n            if (data) initialize();\n            setSpinning(false);\n          }}\n        />\n      ),\n    },\n  ];\n\n  const handleChange = (value: string) => {\n    setAppName(value);\n  };\n\n  return (\n    <>\n      <antd.Spin spinning={spinning}>\n        <div className=\"mb-2 d-flex \">\n          <antd.Select style={{ width: 120 }} onChange={handleChange}>\n            {appCtx.appNames.map((item) => {\n              return (\n                <antd.Select.Option value={item}>{item}</antd.Select.Option>\n              );\n            })}\n          </antd.Select>\n          <antd.Button\n            type=\"primary\"\n            onClick={async () => {\n              setSpinning(true);\n              const data = await appCtx.fetch('post', '/api/dblink', {\n                database: databaseName,\n                service: serviceName,\n                appName: appName,\n                link: true,\n              });\n              if (data) initialize();\n              setSpinning(false);\n            }}\n          >\n            Add Link\n          </antd.Button>\n        </div>\n        <antd.Table\n          dataSource={dataSource}\n          columns={columns}\n          pagination={false}\n        />\n      </antd.Spin>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\n\nimport { AppContext } from '../AppContext';\nimport { PrimaryButton } from '../components/PrimaryButton';\nimport { Notification } from '../components/Notification';\nimport { DangerButton } from '../components/DangerButton';\nimport { AddApp } from '../modals/AddApp';\nimport { ServiceInfo } from '../modals/ServiceInfo';\nimport { AddService } from '../modals/AddService';\nimport { LinkList } from '../modals/LinkList';\n\ninterface database {\n  name: string;\n  installed: boolean;\n  enabled: boolean;\n}\n\ninterface spin {\n  tip?: string;\n  spinning: boolean;\n}\n\nexport const DatabasesTalbe = () => {\n  const appCtx = React.useContext(AppContext);\n  const [dataSource, setDataSource] = React.useState<database[]>([]);\n  const [spinning, setSpinning] = React.useState<spin>({ spinning: false });\n\n  const initialize = async () => {\n    setSpinning({ spinning: true });\n    const data = await appCtx.fetch('get', '/api/databases');\n    if (data) {\n      setDataSource(data.databases);\n    }\n    setSpinning({ spinning: false });\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  const enableDatabase = async (item: database, checked: boolean) => {\n    setSpinning({\n      spinning: true,\n      tip: checked ? `enable ${item.name}` : `disable ${item.name}`,\n    });\n    const data = await appCtx.fetch(\n      'patch',\n      `/api/database/${item.name}/${checked ? 'enable' : 'disable'}`,\n    );\n    setSpinning({ spinning: false });\n    if (data) initialize();\n  };\n\n  return (\n    <>\n      <antd.Spin tip={spinning.tip} spinning={spinning.spinning}>\n        <antd.Tabs defaultActiveKey=\"database\">\n          <antd.Tabs.TabPane tab=\"Database List\" key=\"databaseList\">\n            <Databases\n              databases={dataSource}\n              setSpinning={setSpinning}\n              enableDatabase={enableDatabase}\n            />\n          </antd.Tabs.TabPane>\n          {dataSource.map((item) => {\n            return (\n              <antd.Tabs.TabPane tab={item.name} key={item.name}>\n                <Service serviceName={item.name} />\n              </antd.Tabs.TabPane>\n            );\n          })}\n        </antd.Tabs>\n      </antd.Spin>\n    </>\n  );\n};\n\nconst Service = ({ serviceName }: { serviceName: string }) => {\n  const appCtx = React.useContext(AppContext);\n  const [dataSource, setDataSource] = React.useState<service[]>([]);\n\n  interface service {\n    name: string;\n  }\n  const initialize = async () => {\n    const data = await appCtx.fetch('get', `/api/dbservice/${serviceName}`);\n    if (data) {\n      setDataSource(\n        data.services.map((item: string) => {\n          return { name: item };\n        }),\n      );\n    }\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  const columns: ColumnsType<service> = [\n    {\n      title: 'Name',\n      align: 'center',\n      dataIndex: 'name',\n    },\n    {\n      title: '',\n      align: 'center',\n      render: (item) => (\n        <PrimaryButton\n          title=\"Info\"\n          onClick={() => {\n            appCtx.setModal(\n              <ServiceInfo\n                databaseName={serviceName}\n                serviceName={item.name}\n              />,\n              800,\n            );\n          }}\n        />\n      ),\n    },\n    {\n      title: '',\n      align: 'center',\n      render: (item) => (\n        <PrimaryButton\n          title=\"Link List\"\n          onClick={() => {\n            appCtx.setModal(\n              <LinkList databaseName={serviceName} serviceName={item.name} />,\n            );\n          }}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"mb-2 d-flex flex-row-reverse\">\n        <antd.Button\n          type=\"primary\"\n          onClick={() => {\n            appCtx.setModal(\n              <AddService onSuccess={initialize} databaseName={serviceName} />,\n            );\n          }}\n        >\n          Add Service\n        </antd.Button>\n      </div>\n      <antd.Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n      />\n    </>\n  );\n};\n\nconst Databases = ({\n  databases,\n  setSpinning,\n  enableDatabase,\n}: {\n  databases: database[];\n  setSpinning: (value: React.SetStateAction<spin>) => void;\n  enableDatabase: (item: database, checked: boolean) => Promise<void>;\n}) => {\n  const appCtx = React.useContext(AppContext);\n  const [dataSource, setDataSource] = React.useState<database[]>([]);\n\n  React.useEffect(() => {\n    initialize();\n  }, [databases]);\n\n  const initialize = async () => {\n    let setDB = [...allDatabases];\n    for (const d of databases) {\n      for (const dd of setDB) {\n        if (d.name === dd.name) {\n          dd.installed = true;\n          dd.enabled = d.enabled;\n        }\n      }\n    }\n    setDataSource(setDB);\n  };\n\n  const allDatabases: database[] = [\n    {\n      name: 'postgres',\n      installed: false,\n      enabled: false,\n    },\n    {\n      name: 'mariadb',\n      installed: false,\n      enabled: false,\n    },\n    {\n      name: 'mongo',\n      installed: false,\n      enabled: false,\n    },\n    {\n      name: 'redis',\n      installed: false,\n      enabled: false,\n    },\n    {\n      name: 'mysql',\n      installed: false,\n      enabled: false,\n    },\n  ];\n\n  const columns: ColumnsType<database> = [\n    {\n      title: 'Name',\n      align: 'center',\n      dataIndex: 'name',\n    },\n    {\n      title: 'Enable',\n      align: 'center',\n      render: (item) => (\n        <antd.Switch\n          disabled={!item.installed}\n          checked={item.enabled}\n          onChange={(checked) => {\n            enableDatabase(item, checked);\n          }}\n        ></antd.Switch>\n      ),\n    },\n    {\n      title: 'Installed',\n      align: 'center',\n      render: (item) =>\n        item.installed ? (\n          <DangerButton\n            title=\"Uninstall\"\n            message={`Uninstall ${item.name}`}\n            onClick={async () => {\n              let data = await appCtx.fetch(\n                'delete',\n                `/api/database/${item.name}`,\n              );\n              if (data) {\n                initialize();\n              }\n            }}\n          />\n        ) : (\n          <PrimaryButton\n            title=\"Install\"\n            onClick={async () => {\n              setSpinning({ spinning: true, tip: `Installing ${item.name}` });\n\n              let data = await appCtx.fetch(\n                'post',\n                `/api/database/${item.name}`,\n              );\n              setSpinning({ spinning: false });\n              if (data) initialize();\n            }}\n          />\n        ),\n    },\n  ];\n\n  return (\n    <>\n      <antd.Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColumnsType } from 'antd/lib/table';\nimport * as antd from 'antd';\nimport * as cookie from 'js-cookie';\n\nimport { AppContext } from '../AppContext';\nimport { PrimaryButton } from '../components/PrimaryButton';\nimport { Notification } from '../components/Notification';\nimport { DangerButton } from '../components/DangerButton';\nimport { AddApp } from '../modals/AddApp';\nimport { DatabasesTalbe } from '../table/DatabasesTalbe';\n\nconst GlobalPage = () => {\n  const appCtx = React.useContext(AppContext);\n\n  const initialize = async () => {\n    await appCtx.getApps();\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  const operations = (\n    <antd.Button type=\"primary\" onClick={() => appCtx.setModal(<AddApp />)}>\n      Add new App\n    </antd.Button>\n  );\n\n  return (\n    <>\n      <antd.Tabs defaultActiveKey=\"domain\" tabBarExtraContent={operations}>\n        <antd.Tabs.TabPane tab=\"Global Domain\" key=\"domain\">\n          <DomainTable />\n        </antd.Tabs.TabPane>\n\n        <antd.Tabs.TabPane tab=\"Global Config\" key=\"config\">\n          <ConfigTable />\n        </antd.Tabs.TabPane>\n\n        <antd.Tabs.TabPane tab=\"Database\" key=\"database\">\n          <DatabasesTalbe />\n        </antd.Tabs.TabPane>\n      </antd.Tabs>\n    </>\n  );\n};\n\nconst ConfigTable = () => {\n  const appCtx = React.useContext(AppContext);\n  const [dataSource, setDataSource] = React.useState<PropsValue[]>([]); //coulmns data\n  const [restart, setRestart] = React.useState<boolean>(true);\n\n  const initialize = async () => {\n    const data = await appCtx.fetch('get', `/api/globalconfig`);\n    if (data) {\n      const reports = data.report;\n      const temp = reports.map((report: any) => {\n        return {\n          key: report.Key,\n          value: report.Value,\n        };\n      });\n      setDataSource(temp);\n    }\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  interface PropsValue {\n    key: string;\n    value: string;\n  }\n\n  const columns: ColumnsType<PropsValue> = [\n    {\n      title: 'Key',\n      align: 'center',\n      dataIndex: 'key',\n    },\n    {\n      title: 'Value',\n      align: 'center',\n      dataIndex: 'value',\n    },\n    {\n      title: 'Delete',\n      align: 'center',\n      render: (item) => (\n        <DangerButton\n          title=\"Delete\"\n          message=\"Confirm delete config key?\"\n          onClick={async () => {\n            let data = await appCtx.fetch(\n              'delete',\n              `/api/globalconfig/${item.key}?restart=${restart}`,\n            );\n            if (data) initialize();\n          }}\n        />\n      ),\n    },\n  ];\n\n  const AddConfig = ({ onSuccess }: { onSuccess: Function }) => {\n    const appCtx = React.useContext(AppContext);\n\n    React.useEffect(() => {}, []);\n\n    const onFinish = async (values: any) => {\n      appCtx.setModal(null);\n\n      const data = await appCtx.fetch('post', `/api/globalconfig`, {\n        restart: restart,\n        config: [{ key: values.key, value: values.value }],\n      });\n\n      if (data) {\n        Notification.add('success', 'Success Add');\n        onSuccess();\n      }\n    };\n\n    return (\n      <antd.Form onFinish={onFinish}>\n        <h5 className=\"font-weight-bold mb-4\">Add Config</h5>\n\n        <antd.Form.Item\n          label=\"Key\"\n          name=\"key\"\n          rules={[{ required: true, message: 'Input key' }]}\n        >\n          <antd.Input\n            prefix={<i className=\"fa fa-key\" />}\n            placeholder=\"Please input key\"\n          />\n        </antd.Form.Item>\n\n        <antd.Form.Item\n          label=\"Value\"\n          name=\"value\"\n          rules={[{ required: true, message: 'Input value' }]}\n        >\n          <antd.Input\n            prefix={<i className=\"fa fa-folder-open\" />}\n            placeholder=\"Please input value\"\n          />\n        </antd.Form.Item>\n\n        <antd.Form.Item className=\"text-center\">\n          <></>\n          <PrimaryButton title=\"Add\" htmlType=\"submit\" />\n        </antd.Form.Item>\n      </antd.Form>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"mb-2 d-flex \">\n        <div className=\"mx-1\">Restart After Change</div>\n        <antd.Switch checked={restart} onChange={setRestart} />\n        <div className=\"flex-fill\"></div>\n        <antd.Button\n          type=\"primary\"\n          onClick={() => {\n            appCtx.setModal(<AddConfig onSuccess={initialize} />);\n          }}\n        >\n          Add Config\n        </antd.Button>\n      </div>\n      <antd.Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n      />\n    </>\n  );\n};\n\nconst DomainTable = () => {\n  const appCtx = React.useContext(AppContext);\n  const [dataSource, setDataSource] = React.useState<Host[]>([]); //coulmns data\n\n  const initialize = async () => {\n    const data = await appCtx.fetch('get', `/api/globaldomain`);\n    if (data) {\n      const reports = data.report;\n\n      let hosts: Host[] = [];\n      for (const report of reports) {\n        if (report.Key === 'Domains global vhosts') {\n          const vhosts = report.Value.split(' ');\n          for (const host of vhosts) {\n            if (host !== '') hosts.push({ host });\n          }\n        }\n      }\n\n      if (hosts.length > 0) appCtx.setGlobalDomain(hosts[0].host);\n\n      setDataSource(hosts);\n    }\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  interface Host {\n    host: string;\n  }\n\n  const columns: ColumnsType<Host> = [\n    {\n      title: 'Host',\n      align: 'center',\n      dataIndex: 'host',\n    },\n    {\n      title: 'Delete',\n      align: 'center',\n      render: (item) => (\n        <DangerButton\n          title=\"Delete Domain\"\n          message=\"Confirm delete domain?\"\n          onClick={async () => {\n            let data = await appCtx.fetch(\n              'delete',\n              `/api/globaldomain/${item.host}`,\n              [item.host],\n            );\n            if (data) initialize();\n          }}\n        />\n      ),\n    },\n  ];\n\n  const AddDomain = ({ onSuccess }: { onSuccess: Function }) => {\n    const appCtx = React.useContext(AppContext);\n\n    React.useEffect(() => {}, []);\n\n    const onFinish = async (values: any) => {\n      appCtx.setModal(null);\n\n      const data = await appCtx.fetch('post', `/api/globaldomain`, [\n        values.domain,\n      ]);\n\n      if (data) {\n        Notification.add('success', 'Success Add');\n        onSuccess();\n      }\n    };\n\n    return (\n      <antd.Form onFinish={onFinish}>\n        <h5 className=\"font-weight-bold mb-4\">Add Domain</h5>\n\n        <antd.Form.Item\n          name=\"domain\"\n          rules={[{ required: true, message: 'Input domain' }]}\n        >\n          <antd.Input\n            prefix={<i className=\"fa fa-user\" />}\n            placeholder=\"Please input domain\"\n          />\n        </antd.Form.Item>\n\n        <antd.Form.Item className=\"text-center\">\n          <PrimaryButton title=\"Add\" htmlType=\"submit\" />\n        </antd.Form.Item>\n      </antd.Form>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"mb-2 d-flex flex-row-reverse\">\n        <antd.Button\n          type=\"primary\"\n          onClick={() => {\n            appCtx.setModal(<AddDomain onSuccess={initialize} />);\n          }}\n        >\n          Add Domain\n        </antd.Button>\n      </div>\n      <div className=\"m-2\" />\n      <antd.Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n      />\n    </>\n  );\n};\n\nexport { GlobalPage };\n","import React from 'react';\nimport axios from 'axios';\nimport * as antd from 'antd';\nimport firebase from 'firebase/app';\n\nimport { Notification } from './components/Notification';\n\nimport { AppPage } from './pages/AppPage';\nimport { GlobalPage } from './pages/GlobalPage';\n\ninterface AppContextProps {\n  loginPage: string;\n  homePage: string;\n  setModal: (modal: React.ReactNode | null, width?: number) => void;\n\n  account: string;\n  setAccount: (value: string) => void;\n\n  fetch: (\n    method: 'get' | 'post' | 'put' | 'delete' | 'patch',\n    url: string,\n    param?: any,\n  ) => Promise<any>;\n\n  login: (account: string, password: string) => Promise<any>;\n  logout: () => Promise<void>;\n  redirect: () => Promise<void>;\n\n  globalDomain: string;\n  setGlobalDomain: React.Dispatch<React.SetStateAction<string>>;\n\n  getApps: () => Promise<void>;\n  menus: any[];\n  setMenus: React.Dispatch<React.SetStateAction<any[]>>;\n\n  sshKeyUploaded: boolean | null;\n  setSshKeyUploaded: React.Dispatch<React.SetStateAction<boolean | null>>;\n\n  appNames: string[];\n}\n\nconst AppContext = React.createContext<AppContextProps>(undefined!);\n\ninterface AppProviderProps {\n  children: React.ReactNode;\n}\n\nconst globalMenu = {\n  key: '/global',\n  title: 'Global',\n  component: <GlobalPage />,\n};\n\nconst AppProvider = ({ children }: AppProviderProps) => {\n  const [loginPage] = React.useState('/#/login');\n  const [homePage] = React.useState('/#/global');\n  const [modal, setModal] = React.useState<any>(null);\n  const [modalWidth, setModalWidth] = React.useState<number>(416);\n  // const [modalWithWidth, setModalWithWidth] = React.useState<any>(null);\n\n  const [account, setAccount] = React.useState('');\n  const [menus, setMenus] = React.useState<any[]>([globalMenu]);\n  const [appNames, setAppNames] = React.useState<string[]>([]);\n  const [globalDomain, setGlobalDomain] = React.useState('');\n  const [sshKeyUploaded, setSshKeyUploaded] = React.useState<boolean | null>(\n    null,\n  );\n  // const [initialized, setInitialized] = React.useState<boolean>(false);\n  /////////////////////////////////////////////////////\n\n  React.useEffect(() => {\n    redirect();\n    axios.defaults.baseURL = '';\n    axios.defaults.headers.common['Content-Type'] = 'application/json';\n  }, []);\n\n  const fetch = async (\n    method: 'get' | 'post' | 'put' | 'delete' | 'patch',\n    url: string,\n    param?: any,\n  ) => {\n    let data: any = null;\n\n    try {\n      const response = await axios({\n        method,\n        url,\n        data: param,\n      });\n      console.log('response', response.data);\n\n      if (response.data.errorCode === 3) {\n        setSshKeyUploaded(false);\n      } else {\n        setSshKeyUploaded(true);\n      }\n\n      if (response.data.errorCode === 2) {\n        window.location.href = loginPage;\n        return null;\n      }\n\n      if (response.data.errorCode !== 0) {\n        throw new Error(response.data.errorMessage);\n      }\n\n      data = response.data;\n    } catch (error: any) {\n      Notification.add('error', error.message);\n    }\n\n    return data;\n  };\n\n  const login = async (account: string, password: string): Promise<any> => {\n    const data = await fetch('post', `/api/account/login`, {\n      account,\n      password,\n    });\n\n    setAccount(account);\n\n    if (data) {\n      if (data.errorCode === 0) {\n        Notification.add('success', 'Login');\n        window.location.href = homePage;\n      } else {\n        window.location.href = loginPage;\n      }\n    } else {\n      window.location.href = loginPage;\n    }\n  };\n\n  const logout = async () => {\n    await fetch('post', '/api/account/logout', {});\n    window.location.href = loginPage;\n  };\n\n  const redirect = async () => {\n    const data = await fetch('get', `/api/redirect`);\n    if (data) {\n      window.location.href = homePage;\n    }\n  };\n\n  const getApps = async () => {\n    const data = await fetch('get', `/api/apps`);\n    if (data) {\n      let apps: string[] = [];\n      const temp = data.list.map((item: any) => {\n        apps.push(item);\n        return {\n          key: `/${item}`,\n          title: item,\n          component: <AppPage appName={item} />,\n        };\n      });\n      setAppNames(apps);\n      setMenus([globalMenu, ...temp]);\n    }\n  };\n\n  /////////////////////////////////////////////////////\n\n  return (\n    <AppContext.Provider\n      value={{\n        loginPage,\n        homePage,\n        setModal: (modal: React.ReactNode | null, width: number = 520) => {\n          setModalWidth(width);\n          setModal(modal);\n        },\n\n        account,\n        setAccount,\n\n        fetch,\n\n        login,\n        logout,\n        redirect,\n\n        globalDomain,\n        setGlobalDomain,\n\n        getApps,\n        menus,\n        setMenus,\n\n        sshKeyUploaded,\n        setSshKeyUploaded,\n        appNames,\n      }}\n    >\n      {modal && (\n        <antd.Modal\n          visible={modal !== null}\n          onOk={() => setModal(null)}\n          onCancel={() => setModal(null)}\n          footer={null}\n          closable={false}\n          width={modalWidth}\n        >\n          {modal}\n        </antd.Modal>\n      )}\n\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport { AppContext, AppProvider };\n","import React from 'react';\nimport * as antd from 'antd';\nimport { useHistory } from 'react-router-dom';\n\nimport { AppContext } from '../AppContext';\n\nexport default interface Menu {\n  key: string;\n  title: string;\n  component: JSX.Element;\n  icon: string;\n}\n\ninterface MainPageProps {\n  menus: Menu[];\n  title: string;\n  icon: string;\n  content: JSX.Element;\n}\n\nconst MainPage = ({ menus, title, icon, content }: MainPageProps) => {\n  const appCtx = React.useContext(AppContext);\n  const history = useHistory();\n\n  const renderHeader = () => {\n    return (\n      <antd.Layout.Header\n        className=\"d-flex align-items-center px-3 bg-white shadow-sm\"\n        style={{ zIndex: 1 }}\n      >\n        <div>\n          <i className={icon} />\n          <span className=\"ml-2\">{title}</span>\n        </div>\n\n        <div className=\"flex-fill\" />\n        <antd.Popover\n          placement=\"bottom\"\n          content={\n            <div className=\"d-flex flex-column\">\n              <antd.Button type=\"link\" danger onClick={() => appCtx.logout()}>\n                logout\n              </antd.Button>\n            </div>\n          }\n        >\n          <antd.Button type=\"link\" icon={<i className=\"fa fa-sign-out mr-2\" />}>\n            {`Logout`}\n          </antd.Button>\n        </antd.Popover>\n      </antd.Layout.Header>\n    );\n  };\n\n  const renderContent = () => {\n    return (\n      <antd.Layout.Content style={{ overflow: 'auto' }}>\n        <div className=\"m-3\">{content}</div>\n      </antd.Layout.Content>\n    );\n  };\n\n  const renderMenu = () => {\n    return (\n      <antd.Layout.Sider\n        collapsible\n        trigger={null}\n        style={{ overflow: 'auto' }}\n      >\n        <antd.Menu\n          theme=\"dark\"\n          mode=\"inline\"\n          selectedKeys={[window.location.hash.slice(1)]}\n          defaultOpenKeys={[window.location.hash.slice(1)]}\n          onClick={({ item, key }) => {\n            history.push(key as string);\n          }}\n        >\n          {menus.map((menu) => {\n            return (\n              <antd.Menu.Item key={menu.key}>\n                <span className=\"d-flex align-items-center\">\n                  <div className=\"anticon\">\n                    <i className={menu.icon} />\n                  </div>\n                  <span>{menu.title}</span>\n                </span>\n              </antd.Menu.Item>\n            );\n          })}\n        </antd.Menu>\n      </antd.Layout.Sider>\n    );\n  };\n\n  return (\n    <antd.Layout className=\"vh-100\">\n      {renderMenu()}\n\n      <antd.Layout className=\"bg-white\">\n        {renderHeader()}\n        {renderContent()}\n      </antd.Layout>\n    </antd.Layout>\n  );\n};\n\nexport { MainPage };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as antd from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\nimport { AppContext } from '../AppContext';\nimport { Notification } from '../components/Notification';\n\nconst LaunchPage = () => {\n  const appCtx = React.useContext(AppContext);\n\n  React.useEffect(() => {\n    const init = async () => {\n      await appCtx.redirect();\n    };\n\n    init();\n  }, []);\n  return <></>;\n};\n\nconst LoginPage = () => {\n  const appCtx = React.useContext(AppContext);\n\n  const LoginForm = () => {\n    return (\n      <antd.Form\n        // initialValues={{ account: '', password: '' }}\n        onFinish={(values) => appCtx.login(values.account, values.password)}\n      >\n        <antd.Form.Item\n          name=\"account\"\n          rules={[{ required: true, message: 'Please Input Account!' }]}\n        >\n          <antd.Input\n            prefix={<i className=\"fa fa-user\" />}\n            placeholder=\"Please input account\"\n          />\n        </antd.Form.Item>\n\n        <antd.Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: 'Please Input Password!' }]}\n        >\n          <antd.Input.Password\n            prefix={<i className=\"fa fa-lock\" />}\n            placeholder=\"Please input password\"\n          />\n        </antd.Form.Item>\n\n        <antd.Form.Item className=\"text-center\">\n          <antd.Button type=\"primary\" shape=\"round\" htmlType=\"submit\">\n            Login\n          </antd.Button>\n        </antd.Form.Item>\n      </antd.Form>\n    );\n  };\n\n  return (\n    <div className=\"d-flex align-items-center vh-100\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div\n            className=\"col-4 m-4 text-center font-weight-bold\"\n            style={{ fontSize: '20px' }}\n          >\n            Dokku Web UI\n          </div>\n        </div>\n\n        <div className=\"m-5\" />\n\n        <div className=\"row justify-content-center\">\n          <div className=\"col-4\">\n            <LoginForm />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst NotFoundPage = () => {\n  return <>404</>;\n};\n\nconst UploadPage = () => {\n  const appCtx = React.useContext(AppContext);\n\n  const props = {\n    name: 'uploadfile',\n    action: '/api/ssh/upload',\n\n    async onChange(info: any) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n      if (info.file.status === 'done') {\n        Notification.add('success', 'success upload!');\n        await appCtx.redirect();\n        // appCtx.setSshKeyUploaded(true);\n        // window.location.href = appCtx.loginPage;\n      } else if (info.file.status === 'error') {\n        Notification.add('success', 'upload fail!');\n      }\n    },\n  };\n  return (\n    <div className=\"d-flex align-items-center vh-100\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div\n            className=\"col-4 m-4 text-center font-weight-bold\"\n            style={{ fontSize: '20px' }}\n          >\n            Please Upload SSH Key First\n          </div>\n        </div>\n\n        <div className=\"m-5\" />\n\n        <div className=\"row justify-content-center\">\n          <antd.Upload {...props}>\n            <antd.Button icon={<UploadOutlined />}>Click to Upload</antd.Button>\n          </antd.Upload>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { LaunchPage, LoginPage, NotFoundPage, UploadPage };\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { AppContext } from './AppContext';\nimport * as ReactRouterDOM from 'react-router-dom';\nimport { MainPage } from './pages/MainPage';\nimport {\n  LaunchPage,\n  LoginPage,\n  NotFoundPage,\n  UploadPage,\n} from './pages/LaunchPage';\n\nconst App = () => {\n  const appCtx = React.useContext(AppContext);\n\n  const initialize = async () => {\n    await appCtx.redirect();\n  };\n\n  React.useEffect(() => {\n    initialize();\n  }, []);\n\n  if (appCtx.sshKeyUploaded === null) {\n    return <div></div>;\n  }\n\n  return appCtx.sshKeyUploaded ? (\n    <ReactRouterDOM.HashRouter>\n      <ReactRouterDOM.Switch>\n        <ReactRouterDOM.Route path=\"/\" exact component={LaunchPage} />\n        <ReactRouterDOM.Route path=\"/login\" component={LoginPage} />\n\n        {appCtx.menus.map((item) => (\n          <ReactRouterDOM.Route key={item.key} path={item.key}>\n            <MainPage\n              menus={appCtx.menus}\n              title={item.title}\n              icon={item.icon}\n              content={item.component}\n            />\n          </ReactRouterDOM.Route>\n        ))}\n\n        <ReactRouterDOM.Route path=\"*\" component={NotFoundPage} />\n      </ReactRouterDOM.Switch>\n    </ReactRouterDOM.HashRouter>\n  ) : (\n    <UploadPage />\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppProvider } from './AppContext';\n\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}